<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash "&#x2013;">
        <!ENTITY mdash "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        <!ENTITY PRODNAME "Cloud Files">
        <!ENTITY PRODABBV "CF">
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">

        <!-- Useful for specs -->
        <!ENTITY MIGHT '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MIGHT</emphasis>'>
        <!ENTITY SHOULD '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">SHOULD</emphasis>'>
        <!ENTITY MUST '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST</emphasis>'>
        <!ENTITY MUST_NOT '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST NOT</emphasis>'>

        <!ENTITY CHECK '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Check_mark_23x20_02.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>

        <!ENTITY ARROW '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Arrow_east.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>
]>
<book version="5.0" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
    xml:id="cf-getting-started">
    <?rax title.font.size="40px" subtitle.font.size="30px"?>
    <title>Rackspace Cloud Files™ Getting Started Guide</title>
    <?rax status.bar.text.font.size="40px"
          status.bar.text=""?>
    <titleabbrev>Rackspace Cloud Files Getting Started Guide</titleabbrev>
    <info>
        <copyright>
            <year>2014</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>API v1</releaseinfo>
        <productname>Rackspace Cloud Files™</productname>
        <pubdate>2014-07-22</pubdate>
        <legalnotice role="rs-api">
            <annotation>
                <remark>Copyright details are filled in by the doc build process.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for software developers interested in developing
                applications using the Rackspace Cloud Files™ Application Programming Interface
                    (<abbrev>API</abbrev>). </para>
        </abstract>
        <revhistory>
            <revision xmlns:wadl="http://wadl.dev.java.net/2009/02"
                xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
                <date>2014-07-22</date>
                <revdescription>
                    <para>Added a link to guidance on choosing a regionalized endpoint in <xref
                            linkend="Service_Access_Endpoints-d1e753"/>. </para>
                </revdescription>
            </revision>
            <revision>
                <date>2014-04-30</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Initial publishing of this guide.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
        </revhistory>
        <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
            <raxm:displayname>Getting Started Guide</raxm:displayname>
            <raxm:product version="v1">files</raxm:product>
            <raxm:priority>10</raxm:priority>
        </raxm:metadata>
    </info>
    <chapter xml:id="Doc_Change_History">
        <title>Document change history</title>
        <para>This version of the guide replaces and obsoletes all earlier versions. The most recent
            changes are described in the following table:</para>
        <?rax revhistory?>
    </chapter>
    <chapter xml:id="Overview-d1e01">
        <title>Overview</title>
        <para>Rackspace Cloud Files™ is an affordable, redundant, scalable, and dynamic storage
            service. The core storage system is designed to provide a secure, network-accessible way
            to store an unlimited number of files. Files that exceed 5 GBs in size are broken down
            into 5 GB (or less) segments. For example, if you need to store large files, such as
            videos, HD movies, or backups, Cloud Files accomplishes this by enabling you to upload
            multiple file segments and a manifest file to map those segments together. Large files
            are then downloaded as a single file. You can store as much as you want and pay only for
            storage space that you actually use.</para>
        <para>Cloud Files also provides a simple yet powerful way to publish and distribute content
            behind a content delivery network (CDN). As a Cloud Files user, you get access to this
            network automatically. </para>
        <para>Cloud Files enables you to store and retrieve files and CDN-enabled content through a
            simple RESTful (Representational State Transfer) web services interface. There are also
            language-specific application programming interfaces (APIs) that use the RESTful API and
            make it easy for developers to integrate Cloud Files into their applications.</para>
        <para>The following diagram illustrates the various system interfaces and how content can be
            distributed over the CDN. The process is straightforward: authenticate, create a
            container, upload objects, mark the container as public, and begin serving that content
            from a powerful CDN.</para>
        <note>
            <para>Marking the container as public means enabling the container to be distributed
                over the CDN. A CDN-enabled container is publicly accessible. </para>
        </note>
        <figure xml:id="CFinterfaces">
            <title>Cloud Files system interfaces</title>
            <mediaobject>
                <imageobject>
                    <imagedata scale="60" fileref="figures/CFinterfaces_New.png"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>For more details about the Cloud Files service, see <link
                xlink:href="http://www.rackspace.com/cloud/files/"
                >http://www.rackspace.com/cloud/files/</link> and the Knowledge Center article <link
                xlink:href="http://www.rackspace.com/knowledge_center/article/best-practices-for-using-cloud-files"
                >Best Practices for Using Cloud Files</link>. </para>
        <para>Rackspace welcomes feedback, comments, and bug reports at <link
                xlink:href="mailto:support@rackspacecloud.com">support@rackspacecloud.com</link>. </para>
        <para>This guide provides step-by-step instructions to enter the necessary URLs or commands
            to use the Cloud Files API. You can find additional details about Cloud Files in the
                <emphasis role="italic">Cloud Files Developer Guide</emphasis> at <link
                xlink:href="http://docs.rackspace.com/">http://docs.rackspace.com/</link>. </para>
        <para>This guide uses the API directly with cURL (<xref linkend="Using_the_API_Directly"/>). </para>
        <!-- <remark>Removing per Nicholas Wagner's request and Jerry Scharz's approval </remark> 
        <section xml:id="Benefits-Use-Cases">
            <title>Benefits and Use Cases</title>
            <para xmlns:wadl="http://wadl.dev.java.net/2009/02">&PRODNAME; provides the following
                benefits: <itemizedlist>
                    <listitem>
                        <para>Simplicity of security mechanisms and CDN functionality</para>
                    </listitem>
                    <listitem>
                        <para>Affordability of the service </para>
                    </listitem>
                    <listitem>
                        <para>Flexibility in terms, paying as you go</para>
                    </listitem>
                    <listitem>
                        <para>Great performance</para>
                    </listitem>
                    <listitem>
                        <para>World-class support</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para xmlns:wadl="http://wadl.dev.java.net/2009/02">The primary use cases for &PRODNAME;
                are as follows: <itemizedlist>
                    <listitem>
                        <para>Backing up or archiving data</para>
                    </listitem>
                    <listitem>
                        <para>Serving images and videos (streaming data to the user’s
                            browser)</para>
                    </listitem>
                    <listitem>
                        <para>Serving content with a world-class CDN (Akamai)</para>
                    </listitem>
                    <listitem>
                        <para>Storing secondary, tertiary, or static web-accessible data</para>
                    </listitem>
                    <listitem>
                        <para>Developing new applications with data storage integration</para>
                    </listitem>
                    <listitem>
                        <para>Storing data when predicting storage capacity is difficult</para>
                    </listitem>
                    <listitem>
                        <para>Storing data for applications affordably</para>
                    </listitem>
                </itemizedlist></para>
        </section>
 -->
    </chapter>
    <chapter xml:id="Send-Requests-To-API-d1e101">
        <title>Sending requests to the API</title>
        <para>You have several options for sending requests through an API including the following: </para>
        <itemizedlist>
            <listitem>
                <para>Developers and testers might prefer to use cURL, the command-line tool from
                        <link xlink:href="http://curl.haxx.se/">http://curl.haxx.se/</link>. With
                    cURL, you can send HTTP requests and receive responses back from the command
                    line. </para>
            </listitem>
            <listitem>
                <para>If you like to use a more graphical interface, the REST client for Mozilla
                    Firefox works well for testing and trying out commands. See <link
                        xlink:href="https://addons.mozilla.org/en-US/firefox/addon/restclient/"
                        >https://addons.mozilla.org/en-US/firefox/addon/restclient/</link>. </para>
            </listitem>
            <listitem>
                <para>You can download and install RESTClient, a Java application used to test
                    RESTful web services, from <link
                        xlink:href="http://code.google.com/p/rest-client/"
                        >http://code.google.com/p/rest-client/</link>. </para>
            </listitem>
        </itemizedlist>
        <section xml:id="Prerequisites_Examples">
            <title>Prerequisites for running examples</title>
            <para>To run the examples in this guide, you must have the following prerequisites:
                    <itemizedlist spacing="compact">
                    <listitem>
                        <para>Rackspace Cloud account</para>
                        <para>To sign up for a Rackspace Cloud account, go to the <link
                                xlink:href="https://cart.rackspace.com/cloud/"
                                xmlns:m="http://www.w3.org/the key 1998/Math/MathML">signup
                                page</link>.</para>
                        <para/>
                    </listitem>
                    <listitem>
                        <para>Rackspace Cloud user name and password, as specified during
                            registration</para>
                    </listitem>
                </itemizedlist></para>
            <para>You also need to know your API key. To find your API key, use the following
                steps:</para>
            <orderedlist>
                <listitem>
                    <para>Log in to the Cloud Control Panel (<link
                            xlink:href="https://mycloud.rackspace.com"
                            >https://mycloud.rackspace.com</link>).</para>
                </listitem>
                <listitem>
                    <para>On the upper-right side of the top navigation pane, click your
                        username.</para>
                </listitem>
                <listitem>
                    <para>From the menu, select <guilabel>Account Settings</guilabel>.</para>
                </listitem>
                <listitem>
                    <para>In the Login Details section of the Account Settings page, locate the
                            <guilabel>API Key</guilabel> field and click
                        <guibutton>Show</guibutton>.</para>
                </listitem>
                <listitem>
                    <para>Copy the value of the API key and paste it into a text editor of your
                        choice.</para>
                </listitem>
                <listitem>
                    <para>Click <guibutton>Hide</guibutton> to hide the value of the API key.</para>
                </listitem>
            </orderedlist>
        </section>
        <section xml:id="Using-Curl-d1e101">
            <title>Sending API requests by using cURL</title>
            <para>cURL is a command-line tool that you can use to
                interact with REST interfaces. cURL lets you transmit
                and receive HTTP requests and responses from the
                command line or a shell script, which enables you to
                work with the API directly (without using one of the
                language-specific APIs). cURL is available for most
                UNIX system-based environments, Apple Mac OS X®, and
                Microsoft Windows®. For more information about cURL,
                see <link xlink:href="http://curl.haxx.se/"
                    >http://curl.haxx.se/</link>. </para>
            <para>The following cURL command-line options are used in this guide to run the
                examples:</para>
            <table rules="all">
                <caption>cURL command-line options</caption>
                <col width="25%"/>
                <col width="75%"/>
                <thead>
                    <tr>
                        <th>Option</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>-d</code></td>
                        <td>Sends the specified data in a <command>POST</command> request to the
                            HTTP server.</td>
                    </tr>
                    <tr>
                        <td><code>-i</code></td>
                        <td>Includes the HTTP header in the output.</td>
                    </tr>
                    <tr>
                        <td><code>-H HEADER</code></td>
                        <td>Specifies an HTTP header in the request. You can specify any number of
                            extra headers. Precede each header with the -H option. </td>
                    </tr>
                    <tr>
                        <td><code>-s</code></td>
                        <td>Specifies silent or quiet mode. Does not show progress or error
                            messages. If your cURL command is not generating any output, try
                            replacing the <code>-s</code> option with <code>-i</code>. </td>
                    </tr>
                    <tr>
                        <td><code>-X</code></td>
                        <td>Specifies the request operation to use when communicating with the HTTP
                            server. The specified request is used instead of the default operation,
                            which is <command>GET</command>. For example, <code>-X PUT</code>
                            specifies to use the <command>PUT</command> operation.</td>
                    </tr>
                </tbody>
            </table>
            <note>
                <para>If you have the tools, you can run the cURL JSON request examples with the
                    following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                        request example> | python -m json.tool</command>.</para>
            </note>
        </section>
        <section xml:id="Copy-Past-Curl-d1e101">
            <title>Copying and pasting cURL request examples into a terminal window</title>
            <para>To run the cURL request examples shown in this guide, perform the following
                actions:</para>
            <orderedlist>
                <listitem>
                    <para>Copy each example from the HTML version of this guide and paste it into an
                        ASCII text editor (for example, vi or TextEdit). You can click on the small
                        document icon to the right of each request example to select it.</para>
                </listitem>
                <listitem>
                    <para>Modify each example with your required account information and other
                        information, as detailed in this guide.</para>
                    <note>
                        <para>The carriage returns in the cURL request examples are escaped with a
                            backslash (\) character. The escape character allows continuation of the
                            command across multiple lines. However, do not include the escape
                            character in the JSON or XML request body within the cURL
                            command.</para>
                    </note>
                </listitem>
                <listitem>
                    <para>After you are finished modifying the text for the cURL request example
                        with your information (for example, user name and API key), copy and paste
                        the text into your terminal window.</para>
                </listitem>
                <listitem>
                    <para>Press <keycombo>
                            <keycap>Enter</keycap>
                        </keycombo> to run the cURL command.</para>
                </listitem>
            </orderedlist>
            <para>Consider the following cURL authentication request: JSON example, which is
                described in detail in <xref linkend="Gen-Auth-Token"/>.</para>
            <example>                
                <title>cURL authentication request: JSON</title>
                <?dbfo keep-together="always"?>
                <screen language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
    "auth":
    {
       "RAX-KSKEY:apiKeyCredentials":
       {
          "username": "<emphasis role="bold">yourUserName</emphasis>",
          "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"}
    }
}' \
<option>-H 'Content-Type: application/json'</option> \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri> | python  -m  json.tool </screen>
            </example>
            <para>You can see that the lines that are part of the cURL command syntax have all been
                escaped with a backslash (\) to indicate that the command continues on the next
                line:</para>
            <screen language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
  
   
(... lines within the JSON portion of the message are not shown in this example)
(... the example shows only lines that are part of cURL syntax)     
     

   
 }' \ 
-H 'Content-Type: application/json' \ 
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri>  | python  -m  json.tool </screen>
            <para>However, the lines <emphasis role="italic">within</emphasis> the JSON portion of
                the message are not escaped with a backslash, to avoid issues with the JSON
                processing. </para>
            <screen language="bash">'{
    "auth":
    { 
       "RAX-KSKEY:apiKeyCredentials": 
       {   
          "username": "<emphasis role="bold">yourUserName</emphasis>",   
          "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"} 
    }  
}' \ 
</screen>
            <para>The final line of the JSON message is escaped, but the backslash lies outside the
                JSON message and continues the cURL command to the next line. </para>
            <tip>
                <para>If you have trouble copying and pasting the examples as described, try typing
                    the entire example on one long line, removing all the backslash
                    line-continuation characters.</para>
            </tip>
        </section>
    </chapter>
    <!-- <remark>Request from David Goetz and Nicholoas Wagner to shorten Authentication info for GSG. Have removed this chapter and moved authentication to be first example, 
        and referred users to Dev Guide for all these details since this is a duplicate of the information there.</remark>
    <chapter xml:id="Gen-Auth-Token">
        <title>Generating an Authentication Token</title>
            <para>You need to generate a token whether you use cURL or a REST client.</para>
            <para>In order to use the REST API, you first need to obtain an authentication token,
                which needs to be passed in each request using the <code>X-Auth-Token</code> header. </para>
            <para>The following example demonstrates how to use cURL to obtain the authentication
                token and the account number. You will need to supply the authentication token and
                account number when making subsequent Cloud Files API calls.</para>       
    </chapter> -->
    <chapter xml:id="Service_Access_Endpoints-d1e753">
        <title>Service access endpoints</title>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">Cloud Files is a regionalized service.
            You can create your Cloud Files containers in any Rackspace data center. The user of the
            service is responsible for appropriate replication, caching, and overall maintenance of
            Cloud Files data across regional boundaries to other Cloud Files servers.</para>
        <tip xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <para>To help you decide which regionalized endpoint to use, read about special
                considerations for choosing a data center at <link
                    xlink:href="http://ord.admin.kc.rakr.net/knowledge_center/article/about-regions"
                    >http://ord.admin.kc.rakr.net/knowledge_center/article/about-regions</link>.
                <!--2014-08-01 See JIRA DEVDOC-132. The link needed changed after republished to  
<link xlink:href="http://ord.admin.kc.rakr.net/knowledge_center/article/about-regions">http://ord.admin.kc.rakr.net/knowledge_center/article/about-regions</link>
2014-07-21 rose.coste
David Hendler confirms this is the right KC article:
at the same location, it has a new page title, "Where are the Rackspace data centers (DFW, LON, HKG, etc.)?"
<link xlink:href="http://www.rackspace.com/knowledge_center/article/what-is-ord-and-dfw">http://www.rackspace.com/knowledge_center/article/what-is-ord-and-dfw</link>.
-->
            </para>
        </tip>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">The endpoints to use for the storage
            service component of your Cloud Files API calls are summarized in the following
            table.</para>
        <table xml:id="Endpoints-Table-d1e001" rules="all">
            <caption>Regionalized service endpoints for the storage service</caption>
            <thead>
                <tr align="center">
                    <td colspan="2">Region</td>
                    <td colspan="5">Endpoint</td>
                </tr>
            </thead>
            <tbody>
                <tr align="left">
                    <td colspan="2" rowspan="2">Chicago (ORD)</td>
                    <td colspan="5"
                                    ><code>https://storage101.ord1.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                </tr>
                <tr>
                    <td colspan="5"
                                    ><code>https://snet-storage101.ord1.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                </tr>
                <tr>
                    <td colspan="2" rowspan="2">Dallas/Ft. Worth (DFW)</td>
                    <td colspan="5"
                                    ><code>https://storage101.dfw1.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                </tr>
                <tr>
                    <td colspan="5"
                                    ><code>https://snet-storage101.dfw1.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                </tr>
                <tr>
                    <td colspan="2" rowspan="2">Hong Kong (HKG)</td>
                    <td colspan="5"
                                    ><code>https://storage101.hkg1.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                </tr>
                <tr>
                    <td colspan="5"
                                    ><code>https://snet-storage101.hkg1.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                </tr>
                <tr align="left">
                    <td colspan="2" rowspan="2">London (LON)</td>
                    <td colspan="5"
                                    ><code>https://storage101.lon3.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                </tr>
                <tr>
                    <td colspan="5"
                                    ><code>https://snet-storage101.lon3.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                </tr>
                <tr>
                    <td colspan="2" rowspan="2">Northern Virginia (IAD)</td>
                    <td colspan="5"
                                    ><code>https://storage101.iad3.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                </tr>
                <tr>
                    <td colspan="5"
                                    ><code>https://snet-storage101.iad3.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                </tr>
                <tr>
                    <td colspan="2" rowspan="2">Sydney (SYD)</td>
                    <td colspan="5"
                                    ><code>https://storage101.syd2.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                </tr>
                <tr>
                    <td colspan="5"
                                    ><code>https://snet-storage101.syd2.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                </tr>
            </tbody>
        </table>
        <para>Replace the sample MossoCloudFS information in the preceding table with the actual
            MossoCloudFS information returned as part of the authentication service response. This
            information is located after the final '/' in the <code>publicURL</code> field and the
                <code>internalURL</code> field in the <code>cloudFiles</code> section of the service
            catalog returned by the authentication response. For more information about the account
            number, see the sample authentication request and response in <xref
                linkend="Gen-Auth-Token"/> as well as the Rackspace <citetitle>Cloud Identity Client
                Developer Guide</citetitle>. </para>
        <tip>
            <para>If you do not know which data center you are working in or your account ID, you
                can find them in your Cloud Control Panel at <link
                    xlink:href="https://mycloud.rackspace.com/">mycloud.rackspace.com</link>.
            </para>
        </tip>
        <para>If you are working with cloud servers that are in one of the Rackspace data centers,
            using the ServiceNet endpoint in the same data center has no network costs and provides
            a faster connection. ServiceNet endpoints are prefixed with <code>snet-</code> in <xref
                linkend="Endpoints-Table-d1e001"/>. ServiceNet is the data center internet network.
            In your authentication response, it is listed as <code>internalURL</code>. </para>
        <para> If you are working with servers that are not in one of the Rackspace data centers,
            you must use a public endpoint to connect. In your authentication response, public
            endpoints are listed as <code>publicURL</code>. If you are working with servers in
            multiple data centers or have a mixed environment where you have servers in your own
            data centers and in Rackspace data centers, use a public endpoint because it is
            accessible from all the servers in the different environments.</para>
        <note xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <para>To avoid external bandwidth charges, your containers and servers must be in the
                same data center. </para>
            <para>You might find it useful to locate your objects in more than one data center to
                keep track of your data and backups. Specifically, if you serve an audience in a
                particular region, you might find it helpful to locate your Cloud Files objects as
                close to that region as possible. </para>
        </note>
        <para>The endpoints to use for the CDN management service component of your Cloud Files API
            calls are summarized in the following table.</para>
        <para>
            <note xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
                <para>If your audience is worldwide, consider using the Akamai content delivery
                    network (CDN). The CDN speeds your content delivery because it is cached at edge
                    locations around the globe, rather than being served from a single origin
                    server. You can learn more about CDN-enabling your containers in <xref
                        linkend="CDN-Enabling_the_Container-d1e3123"/>. </para>
            </note>
            <table rules="all">
                <caption>Regionalized service endpoints for the CDN management service</caption>
                <thead>
                    <tr align="center">
                        <td colspan="2">Region</td>
                        <td colspan="5">Endpoint</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="2">Chicago (ORD)</td>
                        <td colspan="5"
                                        ><code>https://cdn2.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                    </tr>
                    <tr>
                        <td colspan="2">Dallas/Ft. Worth (DFW)</td>
                        <td colspan="5"
                                        ><code>https://cdn1.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                    </tr>
                    <tr>
                        <td colspan="2">Hong Kong (HKG)</td>
                        <td colspan="5"
                                        ><code>https://cdn6.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                    </tr>
                    <tr align="left">
                        <td colspan="2">London (LON)</td>
                        <td colspan="5"
                                        ><code>https://cdn3.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                    </tr>
                    <tr>
                        <td colspan="2">Northern Virginia (IAD)</td>
                        <td colspan="5"
                                        ><code>https://cdn5.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                    </tr>
                    <tr>
                        <td colspan="2">Sydney (SYD)</td>
                        <td colspan="5"
                                        ><code>https://cdn4.clouddrive.com/v1/<parameter>MossoCloudFS_<replaceable>aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</replaceable></parameter>/</code></td>
                    </tr>
                </tbody>
            </table>
        </para>
        <para>As with the storage component service, replace the sample MossoCloudFS information
            with the actual MossoCloudFS information returned as part of the authentication service
            response. For the CDN management service, this information is located after the final
            '/' in the <code>publicURL</code> field in the <code>cloudFilesCDN</code> section of the
            service catalog returned by the authentication response. </para>
    </chapter>
    <chapter xml:id="Using_the_API_Directly">
        <title>Using the API directly by using cURL</title>
        <para>This chapter contains simple examples for authentication and some basic Cloud Files
            requests that you will commonly use. Example requests are provided in cURL, followed by
            the response. </para>
        <note>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">Generally, each time
                    <code>curl</code> is invoked to perform an operation, a separate TCP/IP and SSL
                connection is created and then discarded. The language APIs, in contrast, are
                designed to reuse connections between operations and therefore provide much better
                performance. We recommend that you use one of the language APIs in your production
                applications and limit cURL to testing and troubleshooting.</para>
        </note>
        <para>For more information about all Cloud Files operations, see the <emphasis role="italic"
                >Cloud Files Developer Guide</emphasis>.</para>
        <section xml:id="Gen-Auth-Token">
            <title>Generating an authentication token</title>
            <para>Your first step must always be to generate an authentication token. You must then
                include the authentication token in each request in the <code>X-Auth-Token</code>
                header. </para>
            <para>For more details about authentication, see the <citetitle>Cloud Files Developer
                    Guide</citetitle>.</para>
            <para>Remember to replace the placeholders in the following authentication request
                example with your information:<itemizedlist spacing="compact">
                    <listitem>
                        <para><emphasis role="bold">yourUserName</emphasis> &mdash;Your
                            common Rackspace Cloud user name, as supplied during
                            registration.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">yourApiKey</emphasis>
                            &mdash; Your API key. </para>
                        <!-- <remark>Move up to pre-requisites section per Nicholas Wagner</remark> 
                        <para><emphasis role="bold">To find your API key:</emphasis>
                        </para>
                        <orderedlist>
                            <listitem>
                                <para>Log in to the Cloud Control Panel (<link
                                    xlink:href="https://mycloud.rackspace.com"
                                    >https://mycloud.rackspace.com</link>).</para>
                            </listitem>
                            <listitem>
                                <para>On the upper-right side of the top navigation pane, click your
                                    username.</para>
                            </listitem>
                            <listitem>
                                <para>From the menu, select <guilabel>Account
                                    Settings</guilabel>.</para>
                            </listitem>
                            <listitem>
                                <para>In the Login Details section of the Account Settings page,
                                    locate the <guilabel>API Key</guilabel> field and click
                                    <guibutton>Show</guibutton>.</para>
                            </listitem>
                            <listitem>
                                <para>Copy the value of the API Key and paste it into a text editor
                                    of your choice.</para>
                            </listitem>
                            <listitem>
                                <para>Click <guibutton>Hide</guibutton> to hide the value of the API
                                    Key.</para>
                            </listitem>
                        </orderedlist> -->
                    </listitem>
                </itemizedlist></para>
            <para>You authenticate by using the URL for the Cloud Identity service,
                    <code>https://identity.api.rackspacecloud.com/v2.0/tokens</code>, as shown in
                the following authentication request example. </para>
            <note>
                <para>For UK-based accounts, you might use
                        <code>https://lon.identity.api.rackspacecloud.com/v2.0/tokens</code>
                    instead.</para>
            </note>
            <para>The cURL request uses the <code>-s</code> option for silent or quiet mode to
                suppress progress meters and error messages and the <code>-d</code> option to send
                the specified data in a <command>POST</command> request to the HTTP server.</para>
            <example>
                <title>cURL authentication request: JSON</title>
                <?dbfo keep-together="always"?>
                <screen language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
    "auth":
    {
       "RAX-KSKEY:apiKeyCredentials":
       {
          "username": "<emphasis role="bold">yourUserName</emphasis>",
          "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"}
    }
}' \
-H 'Content-Type: application/json' \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri> | python  -m  json.tool </screen>
            </example>
            <para>An HTTP status code of 200 (OK) in the response indicates that the authentication
                request completed successfully.</para>
            <para>In the authentication response, the authentication token <code>id</code> is
                returned with an <code>expires</code> attribute that specifies when the token
                expires. Tokens are valid for a finite duration, typically for 24 hours. Remember to
                supply your authentication token wherever you see the placeholder <emphasis
                    role="bold">yourAuthToken</emphasis> in the examples in this guide.</para>
            <para>The <code>publicURL</code> endpoints for &PRODNAME; (for example
                    <code>https://storage101.dfw1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"</code>)
                are also returned in the authentication response. </para>
            <para>Your actual account number is after the final slash (/) in the
                    <code>publicURL</code> field, for example
                    <code>MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee</code> in the preceding
                endpoint. You must specify <emphasis role="italic">your</emphasis> account number in
                the &PRODNAME; API request, wherever you see the placeholder <emphasis role="bold"
                        >yourAccountID</emphasis> specified in the
                examples in this guide.</para>
            <example>
                <title>Authenticate response with partial service catalog showing cloudFiles and
                    cloudFilesCDN: JSON</title>
                <programlisting language="json"><xi:include href="../../src/docbkx/samples/auth-20-gettingStartedGuide.json" parse="text"/></programlisting>
            </example>
            <para>After authentication, you can use cURL to perform <command>GET</command>,
                    <command>HEAD</command>, <command>DELETE</command>, <command>PUT</command>, and
                    <command>POST</command> requests for the &PRODNAME; API.</para>
        </section>
        <section xml:id="Creating_a_Storage_Container-d1e3026">
            <title>Creating a storage container</title>
            <para> Before uploading any data to Cloud Files, you must create a storage container.
                You do this with a &PUT; request. </para>
            <para>The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the
                    <code>-X</code> option to specify the correct HTTP method and the
                    <code>-i</code> option to send the HTTP response to terminal output.</para>
            <para>An HTTP status code of 201 (Created) in the response indicates that the container
                was successfully created.</para>                                   
            <example>
                <title>cURL create storage container</title>
                <programlisting language="bash">curl -i -X PUT https://storage101.dfw1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" </programlisting>
                <programlisting language="json">HTTP/1.1 201 Created
Content-Length: 0
Content-Type: text/html; charset=UTF-8
X-Trans-Id: txfaf60e1d2a844e5ca9998-0053569d54dfw1
Date: Tue, 22 Apr 2014 16:48:21 GMT</programlisting>
            </example>
        </section>
        <section xml:id="Uploading_a_Storage_Object-d1e3067">
            <title>Uploading an object </title>
            <para>After creating a container, you can upload a file to it. You do this with a &PUT;
                request. You must ensure that the object's <code>Content-Type</code> is set
                correctly so that the receiving server knows what kind of file it is. This is the
                mechanism by which a user's web browser knows how to display the file or whether to
                launch a helper application to display the file.</para>
            <para>The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the
                    <code>-X</code> option to specify the correct HTTP method and the
                    <code>-i</code> option to send the HTTP response to terminal output.</para>
            <para>An HTTP status code of 201 (Created) in the response indicates that the object was
                successfully uploaded.</para>
            <example>
                <title>cURL upload an object</title>
                <programlisting language="bash">curl -i -X PUT https://storage101.dfw1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis>/<emphasis role="bold">yourObjectName</emphasis> /
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: image/jpeg" \
-H "Content-Length: 0"</programlisting>
                <programlisting language="json">HTTP/1.1 201 Created
Last-Modified: Tue, 22 Apr 2014 17:02:35 GMT
Content-Length: 0
Etag: d41d8cd98f00b204e9800998ecf8427e
Content-Type: text/html; charset=UTF-8
X-Trans-Id: tx4f2953d5969d4c40ada04-005356a0aadfw1
Date: Tue, 22 Apr 2014 17:02:34 GMT</programlisting>
            </example>
        </section>
        <section xml:id="updateObjectMetadata-d1e">
            <title>Updating object metadata</title>
            <para>You can send a <command>POST</command> request to set or update custom metadata
                for existing objects. Metadata is set by using the header <code>X-Object-Meta-name:
                    value</code>, where <emphasis role="italic">name</emphasis> is the custom name
                for your metadata and <emphasis role="italic">value</emphasis> is the data value. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> option to specify the correct HTTP
                method and the <code>-i</code> option to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 202
                (Accepted) in the response indicates that the metadata for the object was
                successfully updated.</para>
            <example>
                <title>cURL update object metadata</title>
                <programlisting language="bash">curl -i -X POST https://storage101.dfw1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis>/<emphasis role="bold">yourObjectName</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "X-Object-Meta-ImageType: png" \
-H "X-Object-Meta-ImageSize: 400 MB"</programlisting>
                <programlisting language="json">HTTP/1.1 202 Accepted
Content-Length: 76
Content-Type: text/html; charset=UTF-8
X-Trans-Id: txffc66e0337ae4cd19e79c-005356a1abdfw1
Date: Tue, 22 Apr 2014 17:06:51 GMT</programlisting>
            </example>
        </section>
        <section xml:id="retrieveObject-d1e">
            <title>Retrieving an object</title>
            <para>You can send a <command>GET</command> request to get the object content and
                metadata. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> option to specify the correct HTTP
                method and the <code>-i</code> option to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 200
                (OK) in the response indicates that the object was successfully retrieved.</para>
            <example>
                <title>cURL retrieve an object</title>
                <programlisting language="bash">curl -i -X GET https://storage101.dfw1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis>/<emphasis role="bold">yourObjectName</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" </programlisting>
                <programlisting language="json">HTTP/1.1 200 OK
Content-Length: 0
Accept-Ranges: bytes
X-Object-Meta-Imagetype: png
Last-Modified: Tue, 22 Apr 2014 17:06:52 GMT
X-Object-Meta-Imagesize: 400 MB
Etag: d41d8cd98f00b204e9800998ecf8427e
X-Timestamp: 1398186411.61064
Content-Type: image/jpeg
X-Trans-Id: txad3571ebcee24cabb387a-005356a229dfw1
Date: Tue, 22 Apr 2014 17:08:57 GMT 

[ ...object content...]</programlisting>
            </example>
        </section>
        <section xml:id="deleteObject-d1e">
            <title>Deleting an object</title>
            <para>You can send a <command>DELETE</command> request to the storage service to delete
                an object in a container. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> option to specify the correct HTTP
                method and the <code>-i</code> option to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 204
                (No Content) in the response indicates that the object was successfully
                deleted.</para>
            <para>Both the object data and metadata are removed from the storage system. Object
                deletion is processed immediately at the time of the request. Any subsequent
                    <command>GET</command>, <command>HEAD</command>, <command>POST</command>,
                    <command>PUT</command>, or <command>DELETE</command> operations return a 404
                (Not Found) error (unless object versioning is on and other versions exist). For
                more information about object versioning, see the <citetitle>Cloud Files Developer
                    Guide</citetitle>. </para>
            <example>
                <title>cURL delete an object</title>
                <programlisting language="bash">curl -i -X DELETE https://storage101.dfw1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis>/<emphasis role="bold">yourObjectName</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" </programlisting>
                <programlisting language="json">HTTP/1.1 204 No Content
Content-Length: 0
Content-Type: text/html; charset=UTF-8
X-Trans-Id: tx32fae72bccc94cb68d605-005356a2badfw1
Date: Tue, 22 Apr 2014 17:11:22 GMT</programlisting>
            </example>
        </section>
        <section xml:id="deleteContainer-d1e">
            <title>Deleting a container</title>
            <para>You can send a <command>DELETE</command> request to the storage service to delete
                a container. The container must be empty before you can delete it. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> option to specify the correct HTTP
                method and the <code>-i</code> option to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 204
                (No Content) in the response indicates that the container was successfully
                deleted.</para>
            <example>
                <title>cURL delete a Container</title>
                <programlisting language="bash">curl -i -X DELETE https://storage101.dfw1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>"  </programlisting>
                <programlisting language="json">HTTP/1.1 204 No Content
Content-Length: 0
Content-Type: text/html; charset=UTF-8
X-Trans-Id: tx4b8836bcc20a457d9bbe4-005356a30fdfw1
Date: Tue, 22 Apr 2014 17:12:47 GMT     </programlisting>
            </example>
        </section>
        <section xml:id="Show-Account-Details-d1e101">
            <title>Showing account details</title>
            <para>You can send a
                    <command>GET</command> request to show account details and lists containers.
                Using the <code>format</code> query parameter on the request causes the list to
                include details (<code>count</code>, <code>bytes</code>, and <code>name</code>)
                about each container. Without it, you receive just a list of the container
                names.</para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> option to specify the correct HTTP
                method and the <code>-i</code> option to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 200
                (OK) in the response indicates that the account and container details were
                successfully retrieved.</para>
            <example>
                <title>cURL show account details</title>
                <programlisting language="bash">curl -i -X GET https://storage101.dfw1.clouddrive.com/v1/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>?format=json \
-H "X-Auth-Token: <emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAuthToken</emphasis>"  </programlisting>
                <programlisting language="json">HTTP/1.1 200 OK
Content-Length: 111
X-Account-Object-Count: 573
X-Timestamp: 1369081921.78518
X-Account-Meta-Temp-Url-Key: ed6a04a9f70458575112811a9af5284e
X-Account-Meta-Subject: Whaling
X-Account-Bytes-Used: 14268918
X-Account-Container-Count: 2
Content-Type: application/json; charset=utf-8
Accept-Ranges: bytes
X-Trans-Id: tx6c802728f41b4804812ee-005356a3c8dfw1
Date: Tue, 22 Apr 2014 17:15:52 GMT

 [
  {
    "count": 0,
    "bytes": 0,
    "name": "newcontainer"
  },
  {
    "count": 573,
    "bytes": 14268918,
    "name": "wordpressfiles"
  }
] </programlisting>
            </example>
        </section>
        <section xml:id="Determining_Storage_Usage-d1e2976"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>Determining storage usage</title>
            <para>You can send a <command>HEAD</command> request to the storage service to determine
                how much data you have stored in the system and the number of containers you are
                using. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> option to specify the correct HTTP
                method and the <code>-i</code> option to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 204 (No Content) in the response indicates that the storage
                data was successfully retrieved. The HTTP headers in the response indicate the
                number of containers in this storage account and the total bytes stored for the
                entire account.</para>
            <example>
                <title>cURL determine storage usage</title>
                <programlisting language="bash">curl -i -X HEAD https://storage101.dfw1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" </programlisting>
                <programlisting language="json">HTTP/1.1 204 No Content
Content-Length: 0
X-Account-Object-Count: 573
X-Timestamp: 1369081921.78518
X-Account-Meta-Temp-Url-Key: ed6a04a9f70458575112811a9af5284e
X-Account-Meta-Subject: Whaling
X-Account-Bytes-Used: 14268918
X-Account-Container-Count: 2
Content-Type: text/plain; charset=utf-8
Accept-Ranges: bytes
X-Trans-Id: tx0618e82d44394a6b8c5fb-005356a46fdfw1
Date: Tue, 22 Apr 2014 17:18:39 GMT</programlisting>
            </example>
        </section>
        <section xml:id="CDN-Enabling_the_Container-d1e3123"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>CDN-enabling the container and setting a TTL</title>
            <para>After creating a container and storing a file in it, you can choose to make the
                file publicly readable. Because the data in Cloud Files is private, you share your
                files through the content delivery network (CDN). To CDN-enable a container, issue a
                &PUT; request with <code>X-CDN-Enabled: True</code> against the CDN management
                service. (Note that the service access endpoint URL specifies the CDN system.) The
                default time to live (TTL) value is 72 hours (259200 seconds), with a minimum of 15
                minutes (900 seconds) and a maximum of 1 year (31536000 seconds). The following
                request sets the TTL to 1 week (604800 seconds) with <code>X-TTL:
                604800</code>.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> option to specify the correct HTTP
                method and the <code>-i</code> option to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 201 (Created) in the response indicates that the container
                was successfully CDN-enabled. </para>
            <para>When the container is CDN-enabled, the service returns its public URI in the
                    <code>X-Cdn-Uri</code> header of the response, and returns the SSL URI in the
                    <code>X-Cdn-Ssl-Uri</code> header of the response. You can combine the public
                URI with the object name to access the file through the CDN, or you can use the SSL
                URI with the object name to access the file over a secure SSL connection through the
                CDN.</para>
            <example>
                <title>cURL CDN-enable container and set TTL</title>
                <programlisting language="bash">curl -i -X PUT https://<emphasis role="bold">cdn1.clouddrive.com</emphasis>/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis> /
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "<emphasis role="bold">X-CDN-Enabled: True</emphasis>" \
-H "<emphasis role="bold">X-TTL: 604800</emphasis>"</programlisting>
                <programlisting language="json">HTTP/1.1 201 Created
Content-Length: 0
X-Cdn-Ssl-Uri: https://c93f9b29cd3c6bd865ee-24695493c49b279502b280c6ecd262b5.ssl.cf6.rackcdn.com
X-Cdn-Ios-Uri: http://7a701469fe9980c577e9-24695493c49b279502b280c6ecd262b5.iosr.cf6.rackcdn.com
X-Cdn-Uri: http://98199d7b2503ac330f05-24695493c49b279502b280c6ecd262b5.r17.cf6.rackcdn.com
Content-Type: text/html; charset=UTF-8
X-Cdn-Streaming-Uri: http://ce3a54aaf724a75455d6-24695493c49b279502b280c6ecd262b5.r17.stream.cf6.rackcdn.com
X-Trans-Id: txc2b9b4ef77fd45f28c2d2-005356adfchkg1
Date: Tue, 22 Apr 2014 17:59:24 GMT</programlisting>
            </example>
        </section>
        <section xml:id="viewCDNContainerDetails-d1e">
            <title>Viewing CDN-enabled container details</title>
            <para>To view details about a container in the CDN, issue a <command>HEAD</command>
                request against the CDN management service.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> option to specify the correct HTTP
                method and the <code>-i</code> option to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 204 (No Content) in the response indicates that the
                container details were successfully retrieved. You can confirm the TTL that you set
                in <xref linkend="CDN-Enabling_the_Container-d1e3123"/>.</para>
            <example>
                <title>cURL view CDN-enabled container details</title>
                <programlisting language="bash">curl -i -X HEAD https://<emphasis role="bold">cdn1.clouddrive.com</emphasis>/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis> /
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" </programlisting>
                <programlisting language="json">HTTP/1.1 204 No Content
Content-Length: 0
X-Cdn-Ssl-Uri: https://c93f9b29cd3c6bd865ee-24695493c49b279502b280c6ecd262b5.ssl.cf6.rackcdn.com
X-Ttl: 604800
X-Cdn-Enabled: True
X-Log-Retention: False
X-Cdn-Ios-Uri: http://7a701469fe9980c577e9-24695493c49b279502b280c6ecd262b5.iosr.cf6.rackcdn.com
X-Cdn-Uri: http://98199d7b2503ac330f05-24695493c49b279502b280c6ecd262b5.r17.cf6.rackcdn.com
Content-Type: text/html; charset=UTF-8
X-Cdn-Streaming-Uri: http://ce3a54aaf724a75455d6-24695493c49b279502b280c6ecd262b5.r17.stream.cf6.rackcdn.com
X-Trans-Id: txe291eebdfd96468995a80-005356b167hkg1
Date: Tue, 22 Apr 2014 18:13:59 GMT</programlisting>
            </example>
        </section>
        <section xml:id="purgeCDNData-d1e">
            <title>Purging an object from a CDN-enabled container </title>
            <para>When you find it necessary to remove a CDN-enabled object from public access
                before the TTL expires, you can issue a <command>DELETE</command> request against
                the object in the CDN management service (or you can create a support ticket to
                purge the entire container). Currently, only 25 purges can be performed per account
                per day. </para>
            <note>
                <para>Remember that the objects must be uploaded to the container by using one of
                    the storage service access endpoints. The CDN management service references the
                    objects there.</para>
            </note>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. Optionally, you can include a header
                with an email address to be notified that the object has been purged.</para>
            <para>The cURL request uses the <code>-X</code> option to specify the correct HTTP
                method and the <code>-i</code> option to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 204 (No Content) in the response indicates that the object
                was successfully queued to be purged. </para>
            <para>Because there are so many edge servers around the world, purging an object might
                take a long time. Be patient while waiting for the emailed response. </para>
            <example>
                <title>cURL purge an object from a CDN-enabled container</title>
                <programlisting language="bash">curl -i -X DELETE https://<emphasis role="bold">cdn1.clouddrive.com</emphasis>/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis>/<emphasis role="bold">yourObjectName</emphasis> /
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" /
-H "X-Purge-Email: <emphasis role="bold">yourEmail@yourDomain.com</emphasis>"      </programlisting>
                <programlisting language="json">HTTP/1.1 204 No Content
Content-Length: 0
Content-Type: text/html; charset=UTF-8
X-Trans-Id: tx45187f74dc814ddeb43af-005356c6e1hkg1
Date: Tue, 22 Apr 2014 19:45:39 GMT   </programlisting>
            </example>
        </section>
        <section xml:id="disableCDN-d1e">
            <title>Disabling CDN for a container</title>
            <para>To disable use of the CDN for a container, issue a <command>POST</command> request
                with <code>X-CDN-Enabled: False</code> against the CDN management service. (Note
                that the service access endpoint URL specifies the CDN system.) </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> option to specify the correct HTTP
                method and the <code>-i</code> option to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 202 (Accepted) in the response indicates that the request
                is accept for processing.  </para>
            <example>
                <title>cURL disable CDN for a container</title>
                <programlisting language="bash">curl -i -X POST https://<emphasis role="bold">cdn1.clouddrive.com</emphasis>/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis> /
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "<emphasis role="bold">X-CDN-Enabled: False"</emphasis></programlisting>
                <programlisting language="json">HTTP/1.1 202 Accepted
Content-Length: 76
X-Cdn-Ssl-Uri: https://d0bba87ecb20cfe87c32-58d9a15a50acf66d588aab08348cf859.ssl.cf6.rackcdn.com
X-Cdn-Ios-Uri: http://d03710c19b61b2c12609-58d9a15a50acf66d588aab08348cf859.iosr.cf6.rackcdn.com
X-Cdn-Uri: http://afab448ae0b809160b64-58d9a15a50acf66d588aab08348cf859.r57.cf6.rackcdn.com
Content-Type: text/html; charset=UTF-8
X-Cdn-Streaming-Uri: http://499c627df9227c250afb-58d9a15a50acf66d588aab08348cf859.r57.stream.cf6.rackcdn.com
X-Trans-Id: tx9f451de144d04250a96ed-00535a969bhkg1
Date: Fri, 25 Apr 2014 17:08:43 GMT</programlisting>
            </example>
        </section>
    </chapter>
    <chapter xml:id="Tools_and_Applications_for_Cloud_Files-d1e286">
        <title>Other tools and applications for Cloud Files</title>
        <para> In addition to the REST API and its language-specific bindings, there are several
            other ways that you can to interact with Cloud Files. </para>
        <section xml:id="Control_Panel-d1e294">
            <title>Cloud Control Panel</title>
            <para>The Rackspace Cloud Control Panel is one way to access Cloud Files. This tool
                provides a way to understand, at a high level, how Cloud Files works. It gives
                system administrators a view of the various containers and objects stored in Cloud
                Files. You can create containers in the Cloud Control Panel, and then upload,
                download, and delete files. It also provides a means of updating individual files
                and the metadata that describes those files. <figure>
                    <title>Rackspace Cloud Control Panel</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata format="svg" align="center" scale="40"
                                fileref="figures/cf-screenshot-ControlPanel.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </para>
            <para>Access this screen by logging in to your Cloud Control Panel at <link
                    xlink:href="https://mycloud.rackspace.com">http://mycloud.rackspace.com</link>,
                and then clicking on <command>Files</command> (at the top) to view the Cloud Files
                page. </para>
        </section>
        <section xml:id="FireUploader_GUI-d1e314">
            <title>FireUploader GUI</title>
            <para>FireUploader, a tool from Suchi Software, provides an intuitive interface for
                moving and managing files and metadata in Cloud Files. It works as a plug-in to the
                Mozilla Firefox browser, and it provides a creative way of working with available
                Cloud Files features to allow users to simulate a hierarchical file system
                structure. While setting up the tool, you must supply your Rackspace Cloud username;
                when prompted for a password, enter your API key. For more information, see the
                FireUploader web site at <link xlink:href="http://www.fireuploader.com"
                    >http://www.fireuploader.com</link>. <figure>
                    <title>FireUploader interface to Cloud Files</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata format="svg" align="center" scale="50"
                                fileref="figures/cf-screenshot-FireUploader.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </para>
        </section>
        <section xml:id="Cyberduck-d1e337">
            <title>Cyberduck</title>
            <para> Cyberduck is an open-source Cloud Files browser licensed under the GPL; it's
                available for Mac and Windows. Cyberduck features an easy-to-use interface with
                easily accessible bookmarks. The browser outline view allows users to browse large
                folder structures efficiently and preview files with Quick Look. Cyberduck also
                provides seamless integration with many external editors, making it easy to change
                content quickly. It provides a way to upload and configure Cloud Files to distribute
                content over the CDN. For more information, see the Cyberduck web site at <link
                    xlink:href="http://cyberduck.ch/">http://cyberduck.ch/</link>. <figure>
                    <title>Cyberduck interface to Cloud Files</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata format="svg" align="center" scale="80"
                                fileref="figures/cf-screenshot-Cyberduck.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </para>
        </section>
        <section xml:id="cloudStorageApp-d1e337">
            <title>Rackspace Cloud Storage App for Microsoft SharePoint</title>
            <para>Rackspace Cloud Storage App for Microsoft SharePoint enables you to work with
                files inside of Rackspace Cloud Files alongside SharePoint content. You can download
                the Cloud Storage App from the <link
                    xlink:href="http://office.microsoft.com/en-us/store/rackspace-cloud-storage-app-for-microsoft-sharepoint-WA104094200.aspx?redir=0"
                    >SharePoint Store</link>. Cloud Storage App reduces costs and frees valuable
                space on a SharePoint deployment's Microsoft SQL Server databases by storing data in
                your cloud account. The app also gives you the ability to expose Cloud Files
                containers and objects directly in SharePoint websites where you can download,
                upload, modify, and share files with others. With Cloud Storage App, you can perform
                the following tasks: </para>
            <itemizedlist>
                <listitem>
                    <para>Manage Cloud Files objects directly inside your SharePoint portal</para>
                </listitem>
                <listitem>
                    <para>Add objects to Cloud File containers using a drag-and-drop user
                        interface</para>
                </listitem>
                <listitem>
                    <para>Delete objects from Cloud File containers one at a time or in bulk</para>
                </listitem>
                <listitem>
                    <para>Collaborate with others, even users who do not have SharePoint
                        credentials, by generating temporary URLs that expire after a certain number
                        of days</para>
                </listitem>
            </itemizedlist>
            <para>For more information about the Rackspace Cloud Storage App for Microsoft
                SharePoint, see <link
                    xlink:href="http://www.rackspace.com/knowledge_center/article/cloud-storage-app-for-microsoft-sharepoint-overview"
                    >http://www.rackspace.com/knowledge_center/article/cloud-storage-app-for-microsoft-sharepoint-overview</link>.
            </para>
        </section>
    </chapter>
    <chapter xml:id="Additional_Resources-d1e436">
        <title>Additional resources</title>
        <para>For information about all Cloud Files API operations, see the <citetitle>Cloud Files
                Developer Guide</citetitle> at <link xlink:href="http://docs.rackspace.com/"
                >http://docs.rackspace.com/</link>. All you need to get started with the Cloud Files
            API is in this getting started guide and the developer guide. For additional information
            about Cloud Files, see the <link
                xlink:href="http://www.rackspace.com/knowledge_center/product-page/cloud-files">Knowledge Center</link>.</para>
        <para>The official support channels (phone, chat, email, forums, and knowledge base
            articles) for Cloud Files are available through the Rackspace Cloud web site at <link
                xlink:href="http://www.rackspace.com/cloud/files/"
                >http://www.rackspace.com/cloud/files/</link>. </para>
        <para>If the Cloud Files system is not functioning as expected, you can review the system
            status page at <link xlink:href="http://status.rackspacecloud.com/cloudfiles/"
                >http://status.rackspacecloud.com/cloudfiles/</link>. This page is updated to
            reflect up-to-date information about the system’s current health and status. </para>
        <para>Interested users can also follow updates and announcements via Twitter at <link
                xlink:href="http://www.twitter.com/rackspace"
                >http://www.twitter.com/rackspace</link>. </para>
        <para>Visit the <link
                xlink:href="http://feedback.rackspacecloud.com/forums/71021-product-feedback/"
                >Product Feedback Forum</link> and tell us what you think about &PRODNAME;.</para>
        <para> Developers are also encouraged to join some of the members of the Cloud Files team at
            irc.freenode.net on the #cloudfiles channel. This is not an official Cloud Files support
            channel but should rather be viewed as a community meeting place to share ideas and
            discuss Cloud Files. </para>
        <para>This API uses standard HTTP 1.1 response codes as documented at <link
                xlink:href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                >www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</link>. </para>
    </chapter>
</book>
